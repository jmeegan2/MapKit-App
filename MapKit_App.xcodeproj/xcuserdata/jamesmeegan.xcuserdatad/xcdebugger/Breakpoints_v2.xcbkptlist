<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "B0FE9FFC-57E2-4FD6-B81C-DE053A1F797F"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "19ED04B5-D99A-4665-B403-EF59AE8833A6"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MapKit_App/InputView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "14"
            endingLineNumber = "14"
            landmarkName = "InputView"
            landmarkType = "14">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "E11D6EF2-56DC-43DA-8D02-EE52D5E45587"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MapKit_App/MapView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "13"
            endingLineNumber = "13"
            landmarkName = "MapView"
            landmarkType = "14">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "56107CE4-9F76-43EF-87D5-C91A8F8F735A"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MapKit_AppTests/MapKit_AppTests.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "40"
            endingLineNumber = "40"
            landmarkName = "TripViewModelTests"
            landmarkType = "3">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MapKit_App/Views/MainView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "27"
            endingLineNumber = "27"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - eb12b1e536dad98a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "236">
               </Location>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - 32d0a11be46baa13"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; () in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "36">
               </Location>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - 7aba5527b28001d9"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, SwiftUI.Text, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "88">
               </Location>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - 2060a16c940d5996"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "236">
               </Location>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - 8a7a00e668892a7f"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; () in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "36">
               </Location>
               <Location
                  uuid = "6A291FF8-44ED-4517-86F1-853A4E2F725D - acef9d8225f1ed35"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;MapKit_App.LoadingView, SwiftUI.TupleView&lt;(SwiftUI.Group&lt;SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Spacer, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, MapKit_App.ComponentLocationTextFieldView, MapKit_App.ComponentLocationTextFieldView, SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(MapKit_App.ComponentValueTextFieldView, SwiftUI.Spacer, MapKit_App.ComponentValueTextFieldView)&gt;&gt;, MapKit_App.ComponentRouteOptionsView, SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.cornerRadius(_: CoreGraphics.CGFloat, antialiased: Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, &lt;&lt;opaque return type of SwiftUI.View.shadow(color: SwiftUI.Color, radius: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, SwiftUI._ConditionalContent&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.id&lt;&#x3c4;_0_0 where &#x3c4;_1_0: Swift.Hashable&gt;(&#x3c4;_1_0) -&gt; some&gt;&gt;.0, MapKit_App.ComponentAppleMapsButton)&gt;, SwiftUI.Color&gt;)&gt;&gt; in MapKit_App.MainView.body.getter : some"
                  moduleName = "MapKit_App"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/jamesmeegan/Desktop/softwareDev/mobileApp/MapKit_App/MapKit_App/Views/MainView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "27"
                  endingLineNumber = "27"
                  offsetFromSymbolStart = "88">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
